// <auto-generated />
using KuliJob.Sqlite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KuliJob.Sqlite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.36");

            modelBuilder.Entity("KuliJob.Sqlite.CronDb", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("created_at");

                    b.Property<string>("CronExpression")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cron_expression");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("data");

                    b.Property<string>("Timezone")
                        .HasColumnType("TEXT")
                        .HasColumnName("timezone");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("updated_at");

                    b.HasKey("Name")
                        .HasName("pk_cron");

                    b.ToTable("cron", (string)null);
                });

            modelBuilder.Entity("KuliJob.Sqlite.JobInputDb", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<long?>("CancelledOn")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cancelled_on");

                    b.Property<long?>("CompletedOn")
                        .HasColumnType("INTEGER")
                        .HasColumnName("completed_on");

                    b.Property<long>("CreatedOn")
                        .HasColumnType("INTEGER")
                        .HasColumnName("created_on");

                    b.Property<string>("FailedMessage")
                        .HasColumnType("TEXT")
                        .HasColumnName("failed_message");

                    b.Property<long?>("FailedOn")
                        .HasColumnType("INTEGER")
                        .HasColumnName("failed_on");

                    b.Property<string>("JobData")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("job_data");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("job_name");

                    b.Property<int>("JobState")
                        .HasColumnType("INTEGER")
                        .HasColumnName("job_state");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasColumnType("TEXT")
                        .HasColumnName("queue");

                    b.Property<int>("RetryCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("retry_count");

                    b.Property<int>("RetryDelayMs")
                        .HasColumnType("INTEGER")
                        .HasColumnName("retry_delay_ms");

                    b.Property<int>("RetryMaxCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("retry_max_count");

                    b.Property<string>("ServerName")
                        .HasColumnType("TEXT")
                        .HasColumnName("server_name");

                    b.Property<long>("StartAfter")
                        .HasColumnType("INTEGER")
                        .HasColumnName("start_after");

                    b.Property<long?>("StartedOn")
                        .HasColumnType("INTEGER")
                        .HasColumnName("started_on");

                    b.Property<string>("ThrottleKey")
                        .HasColumnType("TEXT")
                        .HasColumnName("throttle_key");

                    b.Property<int>("ThrottleSeconds")
                        .HasColumnType("INTEGER")
                        .HasColumnName("throttle_seconds");

                    b.HasKey("Id")
                        .HasName("pk_job");

                    b.HasIndex("CreatedOn")
                        .HasDatabaseName("ix_job_created_on");

                    b.HasIndex("JobName")
                        .HasDatabaseName("ix_job_job_name");

                    b.HasIndex("JobState")
                        .HasDatabaseName("ix_job_job_state");

                    b.HasIndex("StartAfter")
                        .HasDatabaseName("ix_job_start_after");

                    b.HasIndex("ThrottleKey")
                        .HasDatabaseName("ix_job_throttle_key");

                    b.ToTable("job", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
